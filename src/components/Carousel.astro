---
import CarouselSlide from "./Carousel/CarouselSlide.astro";
import Photo from "./Carousel/Photo.astro";

---

<carousel-wrapper>
  <div class="carousel">
    <button class="carousel__button carousel__button--prev" id="prevLink" aria-label="Go to previous slide">←</button>

    <ul class="carousel__slides" id="slides">
      <Photo />
    </ul>

    <button class="carousel__button carousel__button--next" id="nextLink" aria-label="Go to next slide">→</button>
  </div>
</carousel-wrapper>

<script>
  class CarouselWrapper extends HTMLElement {
    currentIndex;
    slides: any[] | NodeListOf<Element>;
    prevButton!: Element | null;
    nextButton!: Element | null;
    intervalId: string | number | NodeJS.Timeout | undefined; 
    constructor() {
      super();
      this.currentIndex = 0;
      this.slides = [];
    }

    connectedCallback() {
      
      this.slides = this.querySelectorAll(".carousel__slides li");
      this.prevButton = this.querySelector("#prevLink");
      this.nextButton = this.querySelector("#nextLink");

  
      if (this.prevButton && this.nextButton) {
        // Asignamos eventos de click a los botones
        this.prevButton.addEventListener("click", () => this._prevSlide());
        this.nextButton.addEventListener("click", () => this._nextSlide());
      }

     
      this._updateSlideVisibility();


      this.intervalId = setInterval(() => this._nextSlide(), 3000);
    }

    disconnectedCallback() {
      
      clearInterval(this.intervalId);
    }

    _prevSlide() {
      this.currentIndex = (this.currentIndex - 1 + this.slides.length) % this.slides.length;
      this._updateSlideVisibility();
    }

    _nextSlide() {
      this.currentIndex = (this.currentIndex + 1) % this.slides.length;
      this._updateSlideVisibility();
    }

    _updateSlideVisibility() {
      this.slides.forEach((slide, index) => {
        slide.style.display = index === this.currentIndex ? "block" : "none";
      });
    }
  }

  customElements.define("carousel-wrapper", CarouselWrapper);
</script>

<style>
  
  .carousel {
    display: flex;
    align-items: center;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    position: relative;
  }


  .carousel__slides {
    list-style: none;
    padding: 0;
    margin: 0;
    width: 100%;
    display: flex;
    overflow: hidden;
  }

 
  .carousel__button {
    background-color: rgba(255, 255, 255, 0.8); 
    border: none;
    font-size: 2rem;
    cursor: pointer;
    padding: 0.5rem; 
    position: absolute; 
    top: 50%;
    transform: translateY(-50%);
    z-index: 1; 
  }


  .carousel__button--prev {
    left: 10px;
  }

  .carousel__button--next {
    right: 10px; 
  }


  li {
    width: 100%;
    height: auto;
  }
</style>
